---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

name: 'Test GitHub2Gerrit 🧪'

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

permissions: {}

jobs:
  ### Test the GitHub Action in this Repository (PR context only) ###
  tests:
    name: 'Test GitHub Action'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
    timeout-minutes: 10 # Increase this timeout value as needed
    # Only run on pull requests - action needs PR context
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: "Running local action: ${{ github.repository }}"
        uses: ./
        env:
          G2G_DRYRUN_DISABLE_NETWORK: 'true'
        with:
          GERRIT_KNOWN_HOSTS: 'dummy-host ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC...'
          GERRIT_SSH_PRIVKEY_G2G: 'dummy-key'
          DRY_RUN: 'true'

      # yamllint disable-line rule:line-length
      - name: "Running local action: ${{ github.repository }} [Failure]"
        uses: ./
        id: failure
        continue-on-error: true
        env:
          G2G_DRYRUN_DISABLE_NETWORK: 'true'
        with:
          GERRIT_KNOWN_HOSTS: "dummy-host ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC..."
          GERRIT_SSH_PRIVKEY_G2G: ""
          DRY_RUN: 'true'

      # Failure testing is also important
      - name: "Error if step above did NOT fail"
        if: steps.failure.outcome == 'success'
        shell: bash
        run: |
          # Error if step above did NOT fail
          echo "Error: previous test step did NOT fail ❌"
          exit 1

  cli-integration-test:
    name: 'CLI Integration Test'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
    timeout-minutes: 15
    # Only run on workflow_dispatch or push to main - tests CLI not action
    # yamllint disable-line rule:line-length
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    steps:
      # yamllint disable-line rule:line-length
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: 'Setup Python'
        # yamllint disable-line rule:line-length
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version-file: 'pyproject.toml'

      - name: "Install uv"
        # yamllint disable-line rule:line-length
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d  # v7.1.0

      - name: 'Test CLI integration with Gerrit [Dry Run]'
        shell: bash
        env:
          # GitHub variables passed to CLI
          GITHUB_TOKEN: "${{ github.token }}"
          GITHUB_EVENT_NAME: 'workflow_dispatch'
          GITHUB_REPOSITORY: "${{ github.repository }}"
          GITHUB_REPOSITORY_OWNER: "${{ github.repository_owner }}"
          GITHUB_SERVER_URL: "${{ github.server_url }}"
          GITHUB_RUN_ID: "${{ github.run_id }}"
          GITHUB_SHA: "${{ github.sha }}"
          # Gerrit configuration
          GERRIT_KNOWN_HOSTS: "${{ vars.GERRIT_KNOWN_HOSTS }}"
          GERRIT_SSH_PRIVKEY_G2G: "${{ secrets.GERRIT_SSH_PRIVKEY_G2G }}"
          GERRIT_SERVER: 'gerrit.linuxfoundation.org'
          GERRIT_PROJECT: 'sandbox'
          ALLOW_DUPLICATES: 'true'
          PRESERVE_GITHUB_PRS: 'true'
          G2G_VERBOSE: 'true'
          # Override .gitreview file from external repo
          # This forces CLI to use our environment variables instead of
          # the external repo's .gitreview which points elsewhere
          # CI_TESTING: 'true' # No longer needed now sandbox has dependabot
        run: |
          echo "Testing GitHub2Gerrit CLI integration with LF Gerrit server..."
          echo "Target PR: https://github.com/lfit/sandbox/pull/6"

          # Test with external PR URL using uvx
          echo "Running: uvx --from . github2gerrit https://github.com/lfit/sandbox/pull/6"
          uvx --from . github2gerrit "https://github.com/lfit/sandbox/pull/6"

          echo "✅ Dry-run CLI integration test completed successfully"
          {
            echo "CLI Integration test summary:"
            echo "- Tested with external PR: https://github.com/lfit/sandbox/pull/6"
            echo "- Target Gerrit: gerrit.linuxfoundation.org"
            echo "- Target Project: sandbox"
            echo "- Mode: DRY_RUN (validation only)"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: "Test CLI integration with Gerrit"
        shell: bash
        env:
          # GitHub context (needed for CLI operation)
          GITHUB_TOKEN: "${{ github.token }}"
          GITHUB_EVENT_NAME: 'workflow_dispatch'
          GITHUB_REPOSITORY: "${{ github.repository }}"
          GITHUB_REPOSITORY_OWNER: "${{ github.repository_owner }}"
          GITHUB_SERVER_URL: "${{ github.server_url }}"
          GITHUB_RUN_ID: "${{ github.run_id }}"
          GITHUB_SHA: "${{ github.sha }}"
          # Gerrit configuration - force override of .gitreview
          GERRIT_KNOWN_HOSTS: "${{ vars.GERRIT_KNOWN_HOSTS }}"
          GERRIT_SSH_PRIVKEY_G2G: "${{ secrets.GERRIT_SSH_PRIVKEY_G2G }}"
          GERRIT_SSH_USER_G2G: 'modesevenindustrialsolutions'
          GERRIT_SSH_USER_G2G_EMAIL: 'mwatkins@linuxfoundation.org'
          GERRIT_SERVER: 'gerrit.linuxfoundation.org'
          GERRIT_PROJECT: 'sandbox'
          GERRIT_SERVER_PORT: '29418'
          DRY_RUN: 'false'
          ALLOW_DUPLICATES: 'true'
          PRESERVE_GITHUB_PRS: 'true'
          G2G_VERBOSE: 'true'
          FETCH_DEPTH: '50'
          USE_PR_AS_COMMIT: 'true'
          # Override .gitreview file from external repo
          # This forces CLI to use our environment variables instead of
          # the external repo's .gitreview which points elsewhere
          # CI_TESTING: 'true' # No longer needed now sandbox has dependabot
          # Force derivation to be disabled so our overrides take precedence
          G2G_ENABLE_DERIVATION: 'false'
        run: |
          echo '🚀 Integration Test Summary'
          echo "Target PR: https://github.com/lfit/sandbox/pull/6"

          # Configure git with your identity
          # Gerrit private SSH key is linked to this account
          git config --global user.name "$GERRIT_SSH_USER_G2G"
          git config --global user.email "$GERRIT_SSH_USER_G2G_EMAIL"

          # Push to Gerrit
          echo "Pushing change to Gerrit..."
          uvx --from . github2gerrit "https://github.com/lfit/sandbox/pull/6"

  ### Action Integration Test ###
  action-integration-test:
    name: 'Action Integration Test'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
    timeout-minutes: 15
    # Only run on workflow_dispatch or push to main
    # yamllint disable-line rule:line-length
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    steps:
      # yamllint disable-line rule:line-length
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: 'Setup Python'
        # yamllint disable-line rule:line-length
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version-file: 'pyproject.toml'

      - name: "Install uv"
        # yamllint disable-line rule:line-length
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d  # v7.1.0

      - name: 'Test Action integration with Gerrit [Dry Run]'
        shell: bash
        env:
          # GitHub variables passed to action
          GITHUB_TOKEN: "${{ github.token }}"
          GITHUB_EVENT_NAME: 'workflow_dispatch'
          GITHUB_REPOSITORY: "${{ github.repository }}"
          GITHUB_REPOSITORY_OWNER: "${{ github.repository_owner }}"
          GITHUB_SERVER_URL: "${{ github.server_url }}"
          GITHUB_RUN_ID: "${{ github.run_id }}"
          GITHUB_SHA: "${{ github.sha }}"
          # Gerrit configuration
          GERRIT_KNOWN_HOSTS: "${{ vars.GERRIT_KNOWN_HOSTS }}"
          GERRIT_SSH_PRIVKEY_G2G: "${{ secrets.GERRIT_SSH_PRIVKEY_G2G }}"
          GERRIT_SERVER: 'gerrit.linuxfoundation.org'
          GERRIT_PROJECT: 'sandbox'
          DRY_RUN: 'true'
          ALLOW_DUPLICATES: 'true'
          PRESERVE_GITHUB_PRS: 'true'
          G2G_VERBOSE: 'true'
          # Override .gitreview file from external repo
          # This forces action to use our environment variables instead of
          # the external repo's .gitreview which points elsewhere
          CI_TESTING: 'true'
        run: |
          echo "Testing GitHub2Gerrit Action integration with LF Gerrit server..."
          echo "Target PR: https://github.com/lfit/sandbox/pull/6"

          # Test with external PR URL using uvx
          echo "Running: uvx --from . github2gerrit https://github.com/lfit/sandbox/pull/6"
          uvx --from . github2gerrit "https://github.com/lfit/sandbox/pull/6"

          echo "✅ Dry-run Action integration test completed successfully"
          {
            echo "Action Integration test summary:"
            echo "- Tested with external PR: https://github.com/lfit/sandbox/pull/6"
            echo "- Target Gerrit: gerrit.linuxfoundation.org"
            echo "- Target Project: sandbox"
            echo "- Mode: DRY_RUN (validation only)"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: "Test Action integration with Gerrit"
        shell: bash
        env:
          # GitHub context (needed for action operation)
          GITHUB_TOKEN: "${{ github.token }}"
          GITHUB_EVENT_NAME: 'workflow_dispatch'
          GITHUB_REPOSITORY: "${{ github.repository }}"
          GITHUB_REPOSITORY_OWNER: "${{ github.repository_owner }}"
          GITHUB_SERVER_URL: "${{ github.server_url }}"
          GITHUB_RUN_ID: "${{ github.run_id }}"
          GITHUB_SHA: "${{ github.sha }}"
          # Gerrit configuration - force override of .gitreview
          GERRIT_KNOWN_HOSTS: "${{ vars.GERRIT_KNOWN_HOSTS }}"
          GERRIT_SSH_PRIVKEY_G2G: "${{ secrets.GERRIT_SSH_PRIVKEY_G2G }}"
          GERRIT_SSH_USER_G2G: 'modesevenindustrialsolutions'
          GERRIT_SSH_USER_G2G_EMAIL: 'mwatkins@linuxfoundation.org'
          GERRIT_SERVER: 'gerrit.linuxfoundation.org'
          GERRIT_PROJECT: 'sandbox'
          GERRIT_SERVER_PORT: '29418'
          DRY_RUN: 'false'
          ALLOW_DUPLICATES: 'true'
          PRESERVE_GITHUB_PRS: 'true'
          G2G_VERBOSE: 'true'
          FETCH_DEPTH: '50'
          USE_PR_AS_COMMIT: 'true'
          # Override .gitreview file from external repo
          # This forces action to use our environment variables instead of
          # the external repo's .gitreview which points elsewhere
          CI_TESTING: 'true'
          # Force derivation to be disabled so our overrides take precedence
          G2G_ENABLE_DERIVATION: 'false'
        run: |
          echo '🚀 Action Integration Test Summary'
          echo "Target PR: https://github.com/lfit/sandbox/pull/6"

          # Configure git with your identity
          # Gerrit private SSH key is linked to this account
          git config --global user.name "$GERRIT_SSH_USER_G2G"
          git config --global user.email "$GERRIT_SSH_USER_G2G_EMAIL"

          # Push to Gerrit
          echo "Pushing change to Gerrit..."
          uvx --from . github2gerrit "https://github.com/lfit/sandbox/pull/6"
